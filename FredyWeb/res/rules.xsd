<?xml version="1.0"?>
<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.mmarini.org/fuzzy"
	xmlns="http://www.mmarini.org/fuzzy"
	elementFormDefault="qualified">

	<xs:group name="ExpGroup">
		<xs:choice>
			<xs:element name="predicate" type="xs:string"/>
			<xs:element name="not" type="UnaryExpType"/>
			<xs:element name="very" type="UnaryExpType"/>
			<xs:element name="somewhat" type="UnaryExpType"/>
			<xs:element name="known" type="UnaryExpType"/>
			<xs:element name="ifonlyif" type="BinaryExpType"/>
			<xs:element name="implies" type="BinaryExpType"/>
			<xs:element name="and" type="NupleExpType"/>
			<xs:element name="or" type="NupleExpType"/>
		</xs:choice>
	</xs:group>

	<xs:complexType name="UnaryExpType">
	  <xs:group ref="ExpGroup" minOccurs="1" maxOccurs="1"/>
	</xs:complexType>

	<xs:complexType name="BinaryExpType">
	  <xs:group ref="ExpGroup" minOccurs="2" maxOccurs="2"/>
	</xs:complexType>

	<xs:complexType name="NupleExpType">
	  <xs:group ref="ExpGroup" minOccurs="1" maxOccurs="unbounded"/>
	</xs:complexType>


	<xs:complexType name="AssignsType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="assign" type="xs:string"/>
			<xs:element name="assign-not" type="xs:string"/>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="RuleType">
		<xs:sequence>
			<xs:element name="if" type="UnaryExpType"/>
			<xs:element name="then" type="AssignsType"/>
			<xs:element name="else" type="AssignsType"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="RulesType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="rule" type="RuleType"/>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="rules" type="RulesType" />
</xs:schema>